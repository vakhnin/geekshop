version: '2.3'

services:
  db:
    image: postgres:14.7-alpine
    container_name: postgres_container
    privileged: true
    expose:
      - 5432
    environment:
      POSTGRES_USER: geekbrains
      POSTGRES_PASSWORD: geekbrains
      POSTGRES_DB: geekshop
    labels:
      logging: "commonlogs"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d geekshop -U geekbrains"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - production_network

  django_server:
    image: django:1.0.0
    container_name: django_container
    build:
      context: ..
    expose:
      - 8000
    volumes:
      - media_volume:/media
      - static_volume:/static
    environment:
      - GEEKSHOP_ON_SERVER=True
    command: >
      bash -c "python manage.py migrate
      && python manage.py fill_db 
      && python manage.py collectstatic --noinput
      && gunicorn geekshop.wsgi -b 0.0.0.0:8000"
    labels:
      logging: "commonlogs"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - production_network

  nginx:
    image: nginx
    container_name: nginx_container
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - media_volume:/media
      - static_volume:/static
    labels:
      logging: "nginxlogs"
    depends_on:
      - django_server
    networks:
      - production_network

volumes:
  media_volume:
  static_volume:
  
networks:
  production_network:
    driver: bridge
    name: production_network
